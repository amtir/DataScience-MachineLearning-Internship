

Quiz

1 -

2 - 

3 - 

4 - 4
Which of following is an incorrect SQL command?
2 Marks
Select max(marks) from student
Select sum(marks) from student
Select max(marks1 + marks2) from student
Select sum(marks1 , marks2) from student

The incorrect SQL command is:

‚úÖ SELECT SUM(marks1, marks2) FROM student;

Explanation:
The SUM() function only takes one column as an argument.
SQL does not allow summing multiple columns directly inside SUM().
Instead, you need to add the columns first and then apply SUM(), like this:
SELECT SUM(marks1 + marks2) FROM student;
Why the other queries are correct:
1Ô∏è‚É£ SELECT MAX(marks) FROM student; ‚úÖ

Correct: MAX() works with a single column to return the highest value.
2Ô∏è‚É£ SELECT SUM(marks) FROM student; ‚úÖ

Correct: SUM() calculates the total of all values in the marks column.
3Ô∏è‚É£ SELECT MAX(marks1 + marks2) FROM student; ‚úÖ

Correct: It adds marks1 and marks2 first and then finds the maximum sum.

5 - 5
Which aggregate function does not ignore nulls?
2 Marks
MAX
MIN
COUNT
GROUPING

 Correct Answer: GROUPING

Explanation:
Most aggregate functions ignore NULL values in calculations.
MAX() and MIN() return the highest and lowest values excluding NULLs.
COUNT(column) ignores NULLs, but COUNT(*) includes them.
GROUPING() is a special aggregate function that does not ignore NULLs because it is used in ROLLUP and CUBE operations to determine if a row is an aggregated result.

Example to illustrate GROUPING()

SELECT Department, SUM(Salary), GROUPING(Department) AS IsAggregated
FROM Employees
GROUP BY ROLLUP(Department);

üí° Here, GROUPING(Department) returns 1 for NULL values in aggregated rows.



6 - 6
Which of the following statements is TRUE for the having clause A) aggregates are permitted in the having clause B) subqueries are permitted in the having clause
2 Marks
Only A
Only B
Both A and B
Neither A nor B

‚úÖ Correct Answer: Both A and B

Explanation:
1Ô∏è‚É£ Aggregates are permitted in the HAVING clause ‚úÖ

The HAVING clause is used with GROUP BY and allows aggregate functions like SUM(), COUNT(), AVG(), MAX(), and MIN().
SELECT Department, AVG(Salary) AS AvgSalary
FROM Employees
GROUP BY Department
HAVING AVG(Salary) > 50000;  -- Aggregation is allowed
2Ô∏è‚É£ Subqueries are permitted in the HAVING clause ‚úÖ

Subqueries can be used in HAVING to compare aggregated values.
Example:
SELECT Department, SUM(Salary) AS TotalSalary
FROM Employees
GROUP BY Department
HAVING SUM(Salary) > (SELECT AVG(Salary) FROM Employees);  -- Subquery is allowed
Final Answer:
‚úÖ Both A and B (Aggregates and subqueries are allowed in HAVING)

7 - 7
Which of the following statements cannot be included in the definition of a Transact-SQL user-defined function?
2 Marks
MOVE CONVERSATION
GET CONVERSATION GROUP
RECEIVE
ALL OF THESE

‚úÖ Correct Answer: ALL OF THESE

Explanation:
Transact-SQL User-Defined Functions (UDFs) in SQL Server have strict limitations. They cannot include statements that perform transactional or message queue operations such as:

1Ô∏è‚É£ MOVE CONVERSATION ‚ùå

Used in Service Broker to move a conversation between queues.
Not allowed in UDFs because it modifies state.
2Ô∏è‚É£ GET CONVERSATION GROUP ‚ùå

Retrieves a conversation group from the Service Broker queue.
Not allowed in UDFs because UDFs cannot access external resources or queues.
3Ô∏è‚É£ RECEIVE ‚ùå

Retrieves messages from a Service Broker queue.
Not allowed in UDFs because it involves messaging operations.
üö´ User-Defined Functions (UDFs) must be deterministic and cannot modify database state, perform transactions, or interact with Service Broker.

Final Answer:
‚úÖ ALL OF THESE (None of these statements can be included in a T-SQL UDF)


8 - 8
Which of the following is a proprietary extension of SQL for Microsoft SQL Server?
2 Marks
PL-SQL
T-SQL
PG-SQL
P-SQL

‚úÖ Correct Answer: T-SQL (Transact-SQL)

Explanation:
T-SQL (Transact-SQL) is the proprietary extension of SQL for Microsoft SQL Server.
It extends standard SQL with procedural programming features such as variables, loops, error handling, transactions, and stored procedures.
Why Not the Other Options?
‚ùå PL-SQL (Procedural Language/SQL) ‚Üí Used in Oracle Database.
‚ùå PG-SQL (PL/pgSQL - Procedural Language/PostgreSQL) ‚Üí Used in PostgreSQL.
‚ùå P-SQL (Procedural SQL) ‚Üí Not a recognized extension in SQL Server.

Final Answer:
‚úÖ T-SQL (Transact-SQL, Microsoft SQL Server's SQL extension)

9 - 9
What is required before using a .NET Framework implemented user-defined aggregate function in SQL Server?
2 Marks
Install .NET on SQL Server
Restart SQL Server
Upload .NET assembly with CREATE ASSEMBLY
Compile into a .NET executable

‚úÖ Correct Answer: Upload .NET assembly with CREATE ASSEMBLY

Explanation:
To use a .NET Framework-implemented User-Defined Aggregate Function (UDAF) in SQL Server, you must: 1Ô∏è‚É£ Define the aggregate function in a .NET-supported language (C# or VB.NET).
2Ô∏è‚É£ Compile it into a .NET assembly (DLL file).
3Ô∏è‚É£ Register the assembly in SQL Server using CREATE ASSEMBLY.
4Ô∏è‚É£ Create the aggregate function in SQL Server using CREATE AGGREGATE.

Why Not the Other Options?
‚ùå Install .NET on SQL Server ‚Üí Not required; SQL Server already supports CLR (.NET Common Language Runtime).
‚ùå Restart SQL Server ‚Üí Not needed for enabling user-defined aggregate functions.
‚ùå Compile into a .NET executable ‚Üí SQL Server does not use .EXE files, but requires a DLL assembly.

Final Answer:
‚úÖ Upload .NET assembly with CREATE ASSEMBLY (Correct procedure for using a .NET aggregate function in SQL Server).



10 - 




